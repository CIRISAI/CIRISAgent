# SSH Deploy Commands for CIRISManager
# Use these if the automated deployment fails

# 1. SSH to the server:
ssh -i ~/.ssh/ciris_deploy root@108.61.119.117

# 2. Once connected, run these commands:

# Navigate to the repository
cd /home/ciris/CIRISAgent

# Pull latest changes
git pull origin main

# Run the troubleshooting script to check current state
./deployment/production-troubleshoot.sh

# If CIRISManager is not installed, run the deployment script
./deployment/deploy-ciris-manager.sh

# Alternative quick fix (if scripts aren't available):
cd /home/ciris/CIRISAgent && \
docker-compose -f deployment/docker-compose.dev-prod.yml up -d && \
apt-get update && apt-get install -y python3-pip python3-venv && \
python3 -m venv venv && source venv/bin/activate && \
pip install pyyaml aiofiles && \
cat > /usr/local/bin/ciris-manager << 'EOF'
#!/bin/bash
cd /home/ciris/CIRISAgent
export PYTHONPATH="/home/ciris/CIRISAgent:$PYTHONPATH"
if [ -d "venv" ]; then
    source venv/bin/activate
fi
python3 -m ciris_manager.cli "$@"
EOF
chmod +x /usr/local/bin/ciris-manager && \
mkdir -p /etc/ciris-manager && \
ciris-manager --generate-config --config /etc/ciris-manager/config.yml && \
sed -i 's|docker-compose.yml|docker-compose.dev-prod.yml|' /etc/ciris-manager/config.yml && \
cp deployment/ciris-manager.service /etc/systemd/system/ && \
systemctl daemon-reload && \
systemctl enable ciris-manager && \
systemctl start ciris-manager

# Check if everything is working:
systemctl status ciris-manager
docker ps
curl http://localhost:8080/v1/system/health