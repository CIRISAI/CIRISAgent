version: '3.8'

services:
  # CIRIS Agent
  ciris-agent:
    build:
      context: .
      dockerfile: docker/agent/Dockerfile
    container_name: ciris-agent-datum
    ports:
      - "127.0.0.1:8080:8080"
    environment:
      - CIRIS_AGENT_ID=datum
      - CIRIS_PORT=8080
      - CIRIS_ADAPTER=api
      - CIRIS_ADAPTER_DISCORD=discord
      - CIRIS_MOCK_LLM=true
      - CIRIS_API_HOST=0.0.0.0
      - CIRIS_API_PORT=8080
      - CIRIS_API_INTERACTION_TIMEOUT=55.0
      # Discord configuration - these will be loaded from .env file if present
      - DISCORD_BOT_TOKEN=${DISCORD_BOT_TOKEN}
      - DISCORD_SERVER_ID=${DISCORD_SERVER_ID}
      - DISCORD_CHANNEL_IDS=${DISCORD_CHANNEL_IDS}
      - DISCORD_DEFERRAL_CHANNEL_ID=${DISCORD_DEFERRAL_CHANNEL_ID}
      - WA_USER_ID=${WA_USER_ID}
    volumes:
      - agent_data:/app/data
      - agent_logs:/app/logs
      - ./.env:/app/.env:ro
    networks:
      - ciris-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/v1/system/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    command: ["python", "main.py", "--adapter", "api", "--adapter", "discord", "--mock-llm"]

  # GUI Application
  ciris-gui:
    build:
      context: ./CIRISGUI
      dockerfile: docker/Dockerfile.agui
    container_name: ciris-gui-local
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_CIRIS_API_URL=http://ciris-agent-local:8080
    networks:
      - ciris-network
    depends_on:
      - ciris-agent
    extra_hosts:
      - "host.docker.internal:host-gateway"
    restart: unless-stopped

  # Note: Nginx routing is handled by CIRISManager (separate repository)
  # For local development:
  # 1. Clone CIRISManager: git clone https://github.com/CIRISAI/CIRISManager.git ../CIRISManager
  # 2. Configure: cd ../CIRISManager && ciris-manager --generate-config --config ~/.config/ciris-manager/config.yml
  # 3. Run API: python deployment/run-ciris-manager-api.py
  # This provides nginx routing and multi-agent management capabilities

volumes:
  agent_data:
  agent_logs:
  nginx_logs:  # Used when running nginx from CIRISManager

networks:
  ciris-network:
    driver: bridge