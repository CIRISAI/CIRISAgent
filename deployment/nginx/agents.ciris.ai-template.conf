# NGINX configuration template for agents.ciris.ai
# This template provides static infrastructure and includes dynamic agent routes

upstream ciris_gui {
    server 127.0.0.1:3000;
}

upstream ciris_manager {
    server 127.0.0.1:8888;
}

# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name agents.ciris.ai;
    return 301 https://$server_name$request_uri;
}

# Main HTTPS server
server {
    listen 443 ssl http2;
    server_name agents.ciris.ai;

    # SSL configuration
    ssl_certificate /etc/letsencrypt/live/agents.ciris.ai/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/agents.ciris.ai/privkey.pem;
    include /etc/letsencrypt/options-ssl-nginx.conf;
    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem;

    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' https:; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline';" always;

    # CORS headers for API access
    add_header Access-Control-Allow-Origin "https://agents.ciris.ai" always;
    add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
    add_header Access-Control-Allow-Headers "Authorization, Content-Type, X-Requested-With" always;
    add_header Access-Control-Allow-Credentials "true" always;

    # Handle preflight requests
    if ($request_method = 'OPTIONS') {
        return 204;
    }

    # Health check endpoint
    location /health {
        access_log off;
        return 200 "healthy\n";
        add_header Content-Type text/plain;
    }

    # Main GUI application
    location / {
        proxy_pass http://ciris_gui;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_cache_bypass $http_upgrade;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Manager routes
    location /manager/v1/ {
        proxy_pass http://ciris_manager/manager/v1/;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Manager OAuth callback (for Google OAuth compatibility)
    location /manager/oauth/callback {
        proxy_pass http://ciris_manager/manager/oauth/callback;
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # Include dynamic agent routes managed by CIRISManager
    # This file is generated automatically when agents change
    # Note: This file must exist or nginx will fail to start
    include /etc/nginx/conf.d/agents.conf;

    # Static files
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        proxy_pass http://ciris_gui;
        expires 1y;
        add_header Cache-Control "public, immutable";
    }

    # Logs
    access_log /var/log/nginx/agents.ciris.ai.access.log;
    error_log /var/log/nginx/agents.ciris.ai.error.log;
}