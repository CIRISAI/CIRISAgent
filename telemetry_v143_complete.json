{
  "all_unique_metrics": [
    "\n                )\n                emoji_count = len(emoji_pattern.findall(content))\n                return emoji_count > int(trigger.pattern)\n            return False\n\n        elif trigger.pattern_type == TriggerType.FREQUENCY:\n            # Check message frequency for user\n            user_id = self._extract_user_id(message, adapter_type)\n            if not user_id:\n                return False\n\n            count_str, time_str = trigger.pattern.split(",
    ")\n\n        # Service token authentication successful\n        # NOTE: We do not audit successful service token auth to avoid log spam\n        # Service tokens are used frequently by the manager and other services\n        # Only failed attempts are audited for security monitoring\n\n        # Create auth context for service account\n        from ciris_engine.schemas.api.auth import UserRole as AuthUserRole\n\n        context = AuthContext(\n            user_id=service_user.wa_id,\n            role=AuthUserRole.SERVICE_ACCOUNT,\n            permissions=ROLE_PERMISSIONS.get(AuthUserRole.SERVICE_ACCOUNT, set()),\n            api_key_id=None,\n            authenticated_at=datetime.now(timezone.utc),\n        )\n        context.request = request\n        return context\n\n    # Check if this is username:password format (for legacy support)\n    if ",
    ")\n\n        # Service token authentication successful\n        # NOTE: We do not audit successful service token auth to avoid log spam\n        # Service tokens are used frequently by the manager and other services\n        # Only failed attempts are audited for security monitoring\n\n        # Create auth context for service account\n        from ciris_engine.schemas.api.auth import UserRole as AuthUserRole\n\n        context = AuthContext(\n            user_id=service_user.wa_id,\n            role=AuthUserRole.SERVICE_ACCOUNT,\n            permissions=ROLE_PERMISSIONS.get(AuthUserRole.SERVICE_ACCOUNT, set()),\n            api_key_id=None,\n            authenticated_at=datetime.now(timezone.utc),\n        )\n        context.request = request\n        return context\n\n    # Check if this is username:password format (for legacy support)\n    if _1h",
    ")\n\n        # Service token authentication successful\n        # NOTE: We do not audit successful service token auth to avoid log spam\n        # Service tokens are used frequently by the manager and other services\n        # Only failed attempts are audited for security monitoring\n\n        # Create auth context for service account\n        from ciris_engine.schemas.api.auth import UserRole as AuthUserRole\n\n        context = AuthContext(\n            user_id=service_user.wa_id,\n            role=AuthUserRole.SERVICE_ACCOUNT,\n            permissions=ROLE_PERMISSIONS.get(AuthUserRole.SERVICE_ACCOUNT, set()),\n            api_key_id=None,\n            authenticated_at=datetime.now(timezone.utc),\n        )\n        context.request = request\n        return context\n\n    # Check if this is username:password format (for legacy support)\n    if _24h",
    ")\n\n        # Service token authentication successful\n        # NOTE: We do not audit successful service token auth to avoid log spam\n        # Service tokens are used frequently by the manager and other services\n        # Only failed attempts are audited for security monitoring\n\n        # Create auth context for service account\n        from ciris_engine.schemas.api.auth import UserRole as AuthUserRole\n\n        context = AuthContext(\n            user_id=service_user.wa_id,\n            role=AuthUserRole.SERVICE_ACCOUNT,\n            permissions=ROLE_PERMISSIONS.get(AuthUserRole.SERVICE_ACCOUNT, set()),\n            api_key_id=None,\n            authenticated_at=datetime.now(timezone.utc),\n        )\n        context.request = request\n        return context\n\n    # Check if this is username:password format (for legacy support)\n    if _30d",
    ")\n\n        # Service token authentication successful\n        # NOTE: We do not audit successful service token auth to avoid log spam\n        # Service tokens are used frequently by the manager and other services\n        # Only failed attempts are audited for security monitoring\n\n        # Create auth context for service account\n        from ciris_engine.schemas.api.auth import UserRole as AuthUserRole\n\n        context = AuthContext(\n            user_id=service_user.wa_id,\n            role=AuthUserRole.SERVICE_ACCOUNT,\n            permissions=ROLE_PERMISSIONS.get(AuthUserRole.SERVICE_ACCOUNT, set()),\n            api_key_id=None,\n            authenticated_at=datetime.now(timezone.utc),\n        )\n        context.request = request\n        return context\n\n    # Check if this is username:password format (for legacy support)\n    if _7d",
    "MEMORY",
    "action_counts",
    "action_selected_memorize",
    "action_selected_task_complete",
    "active_connections",
    "active_requests",
    "active_requests_1h",
    "active_requests_24h",
    "active_requests_30d",
    "active_requests_7d",
    "active_tokens",
    "adaptation_count",
    "adapter_count",
    "adapter_count_1h",
    "adapter_count_24h",
    "adapter_count_30d",
    "adapter_count_7d",
    "anomalies_detected_total",
    "answer_count",
    "api_active_connections",
    "api_errors_total",
    "api_requests_total",
    "api_response_time_ms",
    "api_response_time_ms_1h",
    "api_response_time_ms_24h",
    "api_response_time_ms_30d",
    "api_response_time_ms_7d",
    "api_success_rate",
    "audit_errors",
    "audit_errors_total",
    "audit_events_total",
    "audit_latency_ms",
    "audit_latency_ms_total",
    "audit_requests",
    "audit_requests_total",
    "audit_success_rate",
    "audit_success_rate_total",
    "audit_uptime_seconds",
    "auth_attempts_total",
    "auth_attempts_total_1h",
    "auth_attempts_total_24h",
    "auth_attempts_total_30d",
    "auth_attempts_total_7d",
    "auth_failures_total",
    "auth_success_rate",
    "auth_successes_total",
    "auth_uptime_seconds",
    "average_latency_ms",
    "average_message_latency_ms",
    "average_response_time_ms",
    "average_send_time_ms",
    "average_thought_time_ms",
    "avg_response_time_ms",
    "cache_hit_rate",
    "cache_size_mb",
    "cache_ttl_seconds",
    "cached_tokens",
    "cached_tokens_1h",
    "cached_tokens_24h",
    "cached_tokens_30d",
    "cached_tokens_7d",
    "call_count",
    "certificate_count",
    "channel_tokens_cached",
    "cli_active_connections",
    "cli_errors_total",
    "cli_errors_total_1h",
    "cli_errors_total_24h",
    "cli_errors_total_30d",
    "cli_errors_total_7d",
    "cli_requests_total",
    "cli_response_time_ms",
    "cognitive_state_dream_duration_seconds",
    "cognitive_state_dream_entered",
    "cognitive_state_play_duration_seconds",
    "cognitive_state_play_entered",
    "cognitive_state_shutdown_duration_seconds",
    "cognitive_state_shutdown_entered",
    "cognitive_state_solitude_duration_seconds",
    "cognitive_state_solitude_entered",
    "cognitive_state_wakeup_duration_seconds",
    "cognitive_state_wakeup_entered",
    "cognitive_state_work_duration_seconds",
    "cognitive_state_work_entered",
    "command_expiry_seconds",
    "command_expiry_seconds_1h",
    "command_expiry_seconds_24h",
    "command_expiry_seconds_30d",
    "command_expiry_seconds_7d",
    "communication_bus_errors_total",
    "communication_bus_latency_ms",
    "communication_bus_messages_total",
    "config_errors",
    "config_errors_total",
    "config_latency_ms",
    "config_latency_ms_total",
    "config_requests",
    "config_requests_total",
    "config_success_rate",
    "config_success_rate_total",
    "config_uptime_seconds",
    "config_values_total",
    "cpu_percent",
    "cpu_percent_avg",
    "cpu_percent_max",
    "cpu_percent_min",
    "daily_total",
    "delivery_rate",
    "discord_active_connections",
    "discord_errors_total",
    "discord_requests_total",
    "discord_response_time_ms",
    "disk_usage_gb",
    "disk_usage_gb_1h",
    "disk_usage_gb_24h",
    "disk_usage_gb_30d",
    "disk_usage_gb_7d",
    "disk_usage_gb_avg",
    "disk_usage_gb_max",
    "disk_usage_gb_min",
    "duration_ms",
    "duration_seconds",
    "edges_deleted",
    "error_count",
    "error_counts",
    "error_rate",
    "error_rate_percent",
    "errors_24h",
    "errors_current_hour",
    "errors_total",
    "errors_total_1h",
    "errors_total_24h",
    "errors_total_30d",
    "errors_total_7d",
    "events_count",
    "execution_time_ms",
    "execution_time_ms_1h",
    "execution_time_ms_24h",
    "execution_time_ms_30d",
    "execution_time_ms_7d",
    "failed_count",
    "failed_requests",
    "failure_count",
    "failure_rate",
    "failure_rate_1h",
    "failure_rate_24h",
    "failure_rate_30d",
    "failure_rate_7d",
    "filter_adaptations_total",
    "filter_adaptations_total_1h",
    "filter_adaptations_total_24h",
    "filter_adaptations_total_30d",
    "filter_adaptations_total_7d",
    "filter_blocked_total",
    "filter_count",
    "filter_messages_total",
    "filter_passed_total",
    "filter_passed_total_1h",
    "filter_passed_total_24h",
    "filter_passed_total_30d",
    "filter_passed_total_7d",
    "filter_uptime_seconds",
    "guild_count",
    "handler_completed_total",
    "handler_defer_completed",
    "handler_defer_duration_ms",
    "handler_defer_errors",
    "handler_defer_invoked",
    "handler_forget_completed",
    "handler_forget_duration_ms",
    "handler_forget_errors",
    "handler_forget_invoked",
    "handler_invoked_total",
    "handler_memorize_completed",
    "handler_memorize_duration_ms",
    "handler_memorize_errors",
    "handler_memorize_invoked",
    "handler_observe_completed",
    "handler_observe_duration_ms",
    "handler_observe_errors",
    "handler_observe_invoked",
    "handler_plan_completed",
    "handler_plan_duration_ms",
    "handler_plan_errors",
    "handler_plan_invoked",
    "handler_ponder_completed",
    "handler_ponder_duration_ms",
    "handler_ponder_errors",
    "handler_ponder_invoked",
    "handler_recall_completed",
    "handler_recall_duration_ms",
    "handler_recall_errors",
    "handler_recall_invoked",
    "handler_speak_completed",
    "handler_speak_duration_ms",
    "handler_speak_errors",
    "handler_speak_invoked",
    "handler_task_complete_completed",
    "handler_task_complete_duration_ms",
    "handler_task_complete_errors",
    "handler_task_complete_invoked",
    "handler_tool_completed",
    "handler_tool_duration_ms",
    "handler_tool_errors",
    "handler_tool_invoked",
    "hourly_rate",
    "hourly_rate_1h",
    "hourly_rate_24h",
    "hourly_rate_30d",
    "hourly_rate_7d",
    "incident_count",
    "incident_uptime_seconds",
    "init_errors_total",
    "init_time_ms",
    "init_uptime_seconds",
    "init_uptime_seconds_1h",
    "init_uptime_seconds_24h",
    "init_uptime_seconds_30d",
    "init_uptime_seconds_7d",
    "initialization_duration",
    "iso_requests",
    "iso_requests_1h",
    "iso_requests_24h",
    "iso_requests_30d",
    "iso_requests_7d",
    "last_failure_age_seconds",
    "latency_ms",
    "llm",
    "llm.cost.cents",
    "llm.environmental.carbon_grams",
    "llm.environmental.energy_kwh",
    "llm.latency.ms",
    "llm.tokens.input",
    "llm.tokens.output",
    "llm.tokens.total",
    "llm_1h",
    "llm_24h",
    "llm_30d",
    "llm_7d",
    "llm_api_call_structured",
    "llm_api_call_structured_1h",
    "llm_api_call_structured_24h",
    "llm_api_call_structured_30d",
    "llm_api_call_structured_7d",
    "llm_bus_active_providers",
    "llm_bus_active_providers_1h",
    "llm_bus_active_providers_24h",
    "llm_bus_active_providers_30d",
    "llm_bus_active_providers_7d",
    "llm_bus_errors_total",
    "llm_bus_latency_ms",
    "llm_bus_messages_routed",
    "llm_bus_messages_total",
    "llm_bus_provider_selections",
    "llm_bus_routing_errors",
    "llm_bus_routing_errors_1h",
    "llm_bus_routing_errors_24h",
    "llm_bus_routing_errors_30d",
    "llm_bus_routing_errors_7d",
    "llm_cost_cents",
    "llm_errors",
    "llm_errors_total",
    "llm_filters",
    "llm_filters_1h",
    "llm_filters_24h",
    "llm_filters_30d",
    "llm_filters_7d",
    "llm_latency_ms",
    "llm_latency_ms_total",
    "llm_requests",
    "llm_requests_total",
    "llm_success_rate",
    "llm_success_rate_total",
    "llm_tokens_input",
    "llm_tokens_output",
    "llm_tokens_total",
    "llm_tokens_total_1h",
    "llm_tokens_total_24h",
    "llm_tokens_total_30d",
    "llm_tokens_total_7d",
    "llm_tokens_used",
    "llm_uptime_seconds",
    "max_batch_size",
    "max_concurrent_operations",
    "max_image_size_mb",
    "max_response_time_ms",
    "max_shutdown_time_ms",
    "max_tokens",
    "memory",
    "memory_bus_broadcasts",
    "memory_bus_broadcasts_1h",
    "memory_bus_broadcasts_24h",
    "memory_bus_broadcasts_30d",
    "memory_bus_broadcasts_7d",
    "memory_bus_errors",
    "memory_bus_errors_1h",
    "memory_bus_errors_24h",
    "memory_bus_errors_30d",
    "memory_bus_errors_7d",
    "memory_bus_errors_total",
    "memory_bus_latency_ms",
    "memory_bus_messages_total",
    "memory_bus_operations",
    "memory_bus_subscribers",
    "memory_edges_total",
    "memory_errors",
    "memory_errors_total",
    "memory_latency_ms",
    "memory_latency_ms_total",
    "memory_mb",
    "memory_mb_1h",
    "memory_mb_24h",
    "memory_mb_30d",
    "memory_mb_7d",
    "memory_mb_avg",
    "memory_mb_max",
    "memory_mb_min",
    "memory_nodes_total",
    "memory_operations_total",
    "memory_requests",
    "memory_requests_total",
    "memory_success_rate",
    "memory_success_rate_total",
    "memory_type",
    "memory_type_1h",
    "memory_type_24h",
    "memory_type_30d",
    "memory_type_7d",
    "messages_processed_total",
    "min_response_time_ms",
    "model_cost_per_1k_tokens",
    "model_timeout_seconds",
    "network_bytes",
    "network_bytes_avg",
    "network_bytes_max",
    "network_bytes_min",
    "nodes_by_scope",
    "nodes_by_type",
    "nodes_by_type_1h",
    "nodes_by_type_24h",
    "nodes_by_type_30d",
    "nodes_by_type_7d",
    "nodes_deleted",
    "nodes_deleted_1h",
    "nodes_deleted_24h",
    "nodes_deleted_30d",
    "nodes_deleted_7d",
    "ntp_check_count",
    "ntp_check_count_1h",
    "ntp_check_count_24h",
    "ntp_check_count_30d",
    "ntp_check_count_7d",
    "observation_rate_per_hour",
    "observation_rate_per_hour_1h",
    "observation_rate_per_hour_24h",
    "observation_rate_per_hour_30d",
    "observation_rate_per_hour_7d",
    "observation_uptime_seconds",
    "observations_recorded_total",
    "overall_error_rate",
    "overall_uptime_seconds",
    "overall_uptime_seconds_1h",
    "overall_uptime_seconds_24h",
    "overall_uptime_seconds_30d",
    "overall_uptime_seconds_7d",
    "p95_response_ms",
    "p95_response_time_ms",
    "pattern_count",
    "patterns_detected_total",
    "patterns_detected_total_1h",
    "patterns_detected_total_24h",
    "patterns_detected_total_30d",
    "patterns_detected_total_7d",
    "pause_duration",
    "placeholder",
    "problem_count",
    "processed_count",
    "processing_rate_per_sec",
    "processor_count",
    "processor_count_1h",
    "processor_count_24h",
    "processor_count_30d",
    "processor_count_7d",
    "profound_target_mb_per_day",
    "provider_count",
    "query_count",
    "queue_size",
    "queue_size_1h",
    "queue_size_24h",
    "queue_size_30d",
    "queue_size_7d",
    "recent_error_rate",
    "recent_tokens",
    "request_count",
    "requests",
    "requests_handled",
    "root_wa_count",
    "root_wa_count_1h",
    "root_wa_count_24h",
    "root_wa_count_30d",
    "root_wa_count_7d",
    "runtime_control_bus_errors_total",
    "runtime_control_bus_latency_ms",
    "runtime_control_bus_messages_total",
    "runtime_errors",
    "runtime_queue_size",
    "runtime_queue_size_1h",
    "runtime_queue_size_24h",
    "runtime_queue_size_30d",
    "runtime_queue_size_7d",
    "runtime_uptime_seconds",
    "scheduler_uptime_seconds",
    "secrets_tool_uptime_seconds",
    "self_observation_uptime_seconds",
    "services_total",
    "shutdown_emergency_total",
    "shutdown_graceful_total",
    "shutdown_graceful_total_1h",
    "shutdown_graceful_total_24h",
    "shutdown_graceful_total_30d",
    "shutdown_graceful_total_7d",
    "shutdown_requests_total",
    "shutdown_uptime_seconds",
    "size_bytes",
    "source_summary_count",
    "status",
    "status_1h",
    "status_24h",
    "status_30d",
    "status_7d",
    "storage_size_mb",
    "success_rate",
    "task_success_rate",
    "tasks_completed_total",
    "tasks_completed_total_1h",
    "tasks_completed_total_24h",
    "tasks_completed_total_30d",
    "tasks_completed_total_7d",
    "tasks_failed_total",
    "tasks_scheduled_total",
    "telemetry_collection_errors",
    "telemetry_collection_errors_1h",
    "telemetry_collection_errors_24h",
    "telemetry_collection_errors_30d",
    "telemetry_collection_errors_7d",
    "telemetry_errors",
    "telemetry_errors_total",
    "telemetry_latency_ms",
    "telemetry_latency_ms_total",
    "telemetry_requests",
    "telemetry_requests_total",
    "telemetry_success_rate",
    "telemetry_success_rate_total",
    "telemetry_uptime_seconds",
    "telemetry_uptime_seconds_1h",
    "telemetry_uptime_seconds_24h",
    "telemetry_uptime_seconds_30d",
    "telemetry_uptime_seconds_7d",
    "thought_count",
    "thought_count_1h",
    "thought_count_24h",
    "thought_count_30d",
    "thought_count_7d",
    "thought_processing_completed",
    "thought_processing_started",
    "thought_processing_started_1h",
    "thought_processing_started_24h",
    "thought_processing_started_30d",
    "thought_processing_started_7d",
    "time_drift_ms",
    "time_queries_total",
    "time_requests",
    "time_sync_operations",
    "time_uptime_seconds",
    "timeout_seconds",
    "timeout_seconds_1h",
    "timeout_seconds_24h",
    "timeout_seconds_30d",
    "timeout_seconds_7d",
    "timestamp_requests",
    "tokens",
    "tokens_consumed",
    "tokens_last_hour",
    "tool_bus_errors",
    "tool_bus_errors_total",
    "tool_bus_latency_ms",
    "tool_bus_messages_total",
    "tool_count",
    "tool_errors",
    "tools_count",
    "total_edges",
    "total_edges_1h",
    "total_edges_24h",
    "total_edges_30d",
    "total_edges_7d",
    "total_errors",
    "total_nodes",
    "total_nodes_1h",
    "total_nodes_24h",
    "total_nodes_30d",
    "total_nodes_7d",
    "total_requests",
    "total_tokens",
    "total_tokens_cached",
    "total_tokens_cached_1h",
    "total_tokens_cached_24h",
    "total_tokens_cached_30d",
    "total_tokens_cached_7d",
    "tsdb_consolidations_total",
    "tsdb_storage_saved_mb",
    "tsdb_storage_saved_mb_1h",
    "tsdb_storage_saved_mb_24h",
    "tsdb_storage_saved_mb_30d",
    "tsdb_storage_saved_mb_7d",
    "tsdb_uptime_seconds",
    "uptime_requests",
    "uptime_seconds",
    "user_count",
    "wise_authority_errors",
    "wise_authority_errors_total",
    "wise_authority_latency_ms",
    "wise_authority_latency_ms_total",
    "wise_authority_requests",
    "wise_authority_requests_total",
    "wise_authority_success_rate",
    "wise_authority_success_rate_total",
    "wise_bus_errors_total",
    "wise_bus_latency_ms",
    "wise_bus_messages_total",
    "wise_bus_requests",
    "wise_deferrals_total",
    "wise_guidance_total",
    "wise_guidance_total_1h",
    "wise_guidance_total_24h",
    "wise_guidance_total_30d",
    "wise_guidance_total_7d"
  ],
  "metrics": {
    "adapter_metrics": {
      "adapter": [
        "api_errors_total",
        "errors_total",
        "active_connections",
        "api_requests_total",
        "api_response_time_ms"
      ],
      "agent": [
        "memory_mb",
        "uptime_seconds",
        "MEMORY"
      ],
      "api_communication": [
        "error_count",
        "avg_response_time_ms",
        "uptime_seconds",
        "requests_handled"
      ],
      "api_runtime_control": [
        "uptime_seconds",
        "pause_duration"
      ],
      "api_tools": [
        "max_batch_size",
        "tools_count",
        "uptime_seconds"
      ],
      "auth": [
        ")\n\n        # Service token authentication successful\n        # NOTE: We do not audit successful service token auth to avoid log spam\n        # Service tokens are used frequently by the manager and other services\n        # Only failed attempts are audited for security monitoring\n\n        # Create auth context for service account\n        from ciris_engine.schemas.api.auth import UserRole as AuthUserRole\n\n        context = AuthContext(\n            user_id=service_user.wa_id,\n            role=AuthUserRole.SERVICE_ACCOUNT,\n            permissions=ROLE_PERMISSIONS.get(AuthUserRole.SERVICE_ACCOUNT, set()),\n            api_key_id=None,\n            authenticated_at=datetime.now(timezone.utc),\n        )\n        context.request = request\n        return context\n\n    # Check if this is username:password format (for legacy support)\n    if "
      ],
      "cirisnode_client": [
        "answer_count"
      ],
      "cli_adapter": [
        "memory_mb",
        "cli_errors_total",
        "max_concurrent_operations",
        "errors_total",
        "uptime_seconds",
        "execution_time_ms"
      ],
      "cli_tools": [
        "uptime_seconds"
      ],
      "cli_wa_service": [
        "uptime_seconds"
      ],
      "discord_adapter": [
        "errors_total",
        "discord_errors_total",
        "uptime_seconds"
      ],
      "discord_audit": [
        "execution_time_ms",
        "guild_count",
        "user_count"
      ],
      "discord_connection_manager": [
        "latency_ms"
      ],
      "discord_error_handler": [
        "error_counts"
      ],
      "discord_rate_limiter": [
        "requests"
      ],
      "discord_tool_service": [
        "duration_seconds",
        "uptime_seconds",
        "max_batch_size"
      ],
      "discord_tools": [
        "duration_seconds"
      ],
      "discord_vision_helper": [
        "max_tokens",
        "max_image_size_mb"
      ],
      "dsar": [
        "requests"
      ],
      "emergency": [
        "root_wa_count",
        "max_shutdown_time_ms",
        "command_expiry_seconds"
      ],
      "memory_queries": [
        "total_edges",
        "storage_size_mb",
        "nodes_by_type",
        "total_nodes",
        "nodes_by_scope"
      ],
      "system": [
        "uptime_seconds",
        "memory_mb"
      ],
      "telemetry": [
        "llm.tokens.total",
        "llm_api_call_structured",
        "llm.environmental.carbon_grams",
        "llm.tokens.output",
        "handler_invoked_total",
        "uptime_seconds",
        "memory_mb",
        "disk_usage_gb",
        "llm.environmental.energy_kwh",
        "thought_processing_started",
        "handler_completed_total",
        "llm.cost.cents",
        "llm_tokens_used",
        "thought_count",
        "cpu_percent",
        "duration_ms",
        "action_selected_memorize",
        "llm.tokens.input",
        "thought_processing_completed",
        "action_selected_task_complete"
      ],
      "telemetry_metrics": [
        "daily_total",
        "tokens_consumed",
        "hourly_rate"
      ],
      "telemetry_models": [
        "cpu_percent",
        "uptime_seconds",
        "memory_mb"
      ],
      "telemetry_resource_helpers": [
        "cpu_percent",
        "memory_mb"
      ]
    },
    "bus_metrics": {
      "base_bus": [
        "queue_size"
      ],
      "bus_manager": [
        "memory",
        "llm"
      ],
      "communication_bus": [
        "active_connections"
      ],
      "llm_bus": [
        "llm_bus_messages_routed",
        "failed_requests",
        "llm_bus_active_providers",
        "llm_bus_provider_selections",
        "llm.tokens.total",
        "llm.environmental.energy_kwh",
        "average_latency_ms",
        "llm.environmental.carbon_grams",
        "llm.tokens.output",
        "llm_bus_routing_errors",
        "failure_rate",
        "llm.latency.ms",
        "total_requests",
        "llm.tokens.input",
        "llm.cost.cents"
      ],
      "memory_bus": [
        "memory_bus_operations",
        "total_nodes",
        "query_count",
        "provider_count",
        "cache_hit_rate",
        "memory_bus_errors",
        "memory_bus_subscribers",
        "memory_bus_broadcasts"
      ],
      "runtime_control_bus": [
        "adapter_count",
        "processor_count",
        "uptime_seconds"
      ],
      "tool_bus": [
        "failed_count",
        "processed_count",
        "tool_bus_errors",
        "provider_count"
      ],
      "wise_bus": [
        "failed_count",
        "wise_bus_requests",
        "processed_count",
        "provider_count"
      ]
    },
    "handler_metrics": {},
    "pull_metrics": {
      "status": {
        "source": "telemetry_aggregator_fallback",
        "type": "pull"
      }
    },
    "push_metrics": {},
    "service_metrics": {
      "adapters": [
        "placeholder"
      ],
      "adaptive_filter": [
        "placeholder"
      ],
      "agent_processor": [
        "placeholder"
      ],
      "api": [
        "placeholder"
      ],
      "audit": [
        "placeholder"
      ],
      "audit_service": [
        "audit_uptime_seconds",
        "audit_events_total",
        "cache_size_mb",
        "uptime_seconds"
      ],
      "authentication": [
        "channel_tokens_cached",
        "total_tokens_cached",
        "cached_tokens",
        "auth_failures_total",
        "auth_uptime_seconds",
        "active_tokens",
        "certificate_count",
        "auth_success_rate",
        "auth_attempts_total",
        "auth_successes_total",
        "uptime_seconds"
      ],
      "base_service": [
        "error_count",
        "request_count",
        "error_rate",
        "uptime_seconds"
      ],
      "base_service_internal": [
        "error_count",
        "request_count",
        "error_rate",
        "uptime_seconds"
      ],
      "buses": [
        "placeholder"
      ],
      "circuit_breaker": [
        "placeholder"
      ],
      "cli": [
        "placeholder"
      ],
      "communication_bus": [
        "placeholder"
      ],
      "components": [
        "placeholder"
      ],
      "config": [
        "placeholder"
      ],
      "config_service": [
        "config_uptime_seconds",
        "config_values_total",
        "uptime_seconds"
      ],
      "control_service": [
        "average_thought_time_ms",
        "runtime_uptime_seconds",
        "size_bytes",
        "processing_rate_per_sec",
        "runtime_errors",
        "runtime_queue_size",
        "uptime_seconds",
        "average_message_latency_ms",
        "events_count"
      ],
      "database_maintenance": [
        "placeholder"
      ],
      "discord": [
        "placeholder"
      ],
      "example_usage": [
        "average_send_time_ms",
        "p95_response_ms",
        "average_response_time_ms",
        "success_rate",
        "p95_response_time_ms",
        "active_requests",
        "error_count",
        "delivery_rate",
        "recent_error_rate"
      ],
      "filter": [
        "llm_filters",
        "filter_adaptations_total",
        "filter_count",
        "filter_uptime_seconds",
        "filter_passed_total",
        "filter_blocked_total",
        "uptime_seconds",
        "\n                )\n                emoji_count = len(emoji_pattern.findall(content))\n                return emoji_count > int(trigger.pattern)\n            return False\n\n        elif trigger.pattern_type == TriggerType.FREQUENCY:\n            # Check message frequency for user\n            user_id = self._extract_user_id(message, adapter_type)\n            if not user_id:\n                return False\n\n            count_str, time_str = trigger.pattern.split(",
        "filter_messages_total"
      ],
      "governance": [
        "placeholder"
      ],
      "graph": [
        "placeholder"
      ],
      "incident_management": [
        "placeholder"
      ],
      "incident_service": [
        "incident_uptime_seconds",
        "incident_count",
        "uptime_seconds",
        "problem_count",
        "pattern_count"
      ],
      "infrastructure": [
        "placeholder"
      ],
      "initialization": [
        "initialization_duration",
        "init_uptime_seconds",
        "errors_total",
        "init_time_ms",
        "uptime_seconds",
        "init_errors_total"
      ],
      "llm": [
        "placeholder"
      ],
      "llm_bus": [
        "placeholder"
      ],
      "llm_service": [
        "timeout_seconds",
        "llm_api_call_structured",
        "errors_total",
        "last_failure_age_seconds",
        "uptime_seconds",
        "model_timeout_seconds",
        "max_response_time_ms",
        "llm_requests_total",
        "llm_tokens_used",
        "call_count",
        "llm_tokens_total",
        "avg_response_time_ms",
        "api_success_rate",
        "min_response_time_ms",
        "llm_tokens_output",
        "llm_uptime_seconds",
        "failure_count",
        "llm_errors_total",
        "llm_cost_cents",
        "success_rate",
        "model_cost_per_1k_tokens",
        "llm_tokens_input"
      ],
      "memory": [
        "placeholder"
      ],
      "memory_bus": [
        "placeholder"
      ],
      "processing_queue": [
        "placeholder"
      ],
      "resource_monitor": [
        "placeholder"
      ],
      "runtime": [
        "placeholder"
      ],
      "runtime_control": [
        "placeholder"
      ],
      "runtime_control_bus": [
        "placeholder"
      ],
      "scheduler": [
        "tasks_scheduled_total",
        "task_success_rate",
        "tasks_completed_total",
        "uptime_seconds",
        "scheduler_uptime_seconds",
        "tasks_failed_total"
      ],
      "secrets": [
        "placeholder"
      ],
      "secrets_tool": [
        "placeholder"
      ],
      "secrets_tool_service": [
        "tool_errors",
        "success_rate",
        "uptime_seconds",
        "secrets_tool_uptime_seconds",
        "tool_count"
      ],
      "self_observation": [
        "observation_rate_per_hour",
        "adaptation_count",
        "anomalies_detected_total",
        "observations_recorded_total",
        "self_observation_uptime_seconds",
        "uptime_seconds",
        "duration_seconds",
        "observation_uptime_seconds",
        "patterns_detected_total"
      ],
      "service": [
        "tsdb_consolidations_total",
        "total_tokens",
        "edges_deleted",
        "tsdb_uptime_seconds",
        "success_rate",
        "action_counts",
        "profound_target_mb_per_day",
        "nodes_deleted",
        "uptime_seconds",
        "error_count",
        "source_summary_count",
        "tsdb_storage_saved_mb"
      ],
      "service_initializer": [
        "placeholder"
      ],
      "service_registry": [
        "placeholder"
      ],
      "shutdown": [
        "shutdown_emergency_total",
        "shutdown_uptime_seconds",
        "shutdown_graceful_total",
        "shutdown_requests_total",
        "uptime_seconds"
      ],
      "task_scheduler": [
        "placeholder"
      ],
      "telemetry": [
        "placeholder"
      ],
      "telemetry_service": [
        "memory_type",
        "tokens",
        "llm.tokens.total",
        "llm.environmental.carbon_grams",
        "errors_current_hour",
        "recent_tokens",
        "llm.tokens.output",
        "handler_invoked_total",
        "uptime_seconds",
        "telemetry_uptime_seconds",
        "memory_mb",
        "llm.environmental.energy_kwh",
        "thought_processing_started",
        "overall_uptime_seconds",
        "overall_error_rate",
        "cache_size_mb",
        "llm_tokens_used",
        "llm.cost.cents",
        "cpu_percent",
        "error_rate_percent",
        "cache_ttl_seconds",
        "tokens_last_hour",
        "total_requests",
        "memory",
        "llm.tokens.input",
        "user_count",
        "errors_24h",
        "services_total",
        "telemetry_collection_errors",
        "thought_processing_completed",
        "total_errors",
        "llm",
        "action_selected_task_complete"
      ],
      "time": [
        "time_sync_operations",
        "timestamp_requests",
        "time_drift_ms",
        "time_queries_total",
        "ntp_check_count",
        "time_uptime_seconds",
        "total_requests",
        "uptime_requests",
        "uptime_seconds",
        "iso_requests",
        "time_requests"
      ],
      "tool_bus": [
        "placeholder"
      ],
      "tsdb_consolidation": [
        "placeholder"
      ],
      "visibility": [
        "placeholder"
      ],
      "wise_authority": [
        "placeholder"
      ],
      "wise_bus": [
        "placeholder"
      ]
    }
  },
  "summary": {
    "adapter_metrics": 26,
    "bus_metrics": 8,
    "handler_metrics": 0,
    "pull_metrics": 1,
    "push_metrics": 0,
    "service_metrics": 55,
    "total_metrics": 542
  }
}
