# Pre-commit hooks for CIRIS code quality
# Install: pip install pre-commit
# Setup: pre-commit install
# Manual run: pre-commit run --all-files

repos:
  # Grace - Smart gatekeeper (blocks critical, reports quality)
  - repo: local
    hooks:
      - id: grace-gatekeeper
        name: Grace Smart Gatekeeper
        entry: python tools/dev/grace_precommit.py
        language: python
        pass_filenames: false
        always_run: true
        verbose: true
        stages: [pre-commit]

  # Formatters - Always run, auto-fix
  - repo: https://github.com/psf/black
    rev: 24.4.2
    hooks:
      - id: black
        language_version: python3.12
        args: ['--line-length=120']
        # Never fail, just fix
        always_run: true
        fail_fast: false

  - repo: https://github.com/PyCQA/isort
    rev: 5.13.2
    hooks:
      - id: isort
        args: ['--profile', 'black', '--line-length', '120']
        # Never fail, just fix
        always_run: true
        fail_fast: false

  # Basic hygiene - Always fix
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.6.0
    hooks:
      - id: trailing-whitespace
      - id: end-of-file-fixer
      - id: mixed-line-ending
        args: ['--fix=lf']
      # Critical checks that should block
      - id: check-merge-conflict
      - id: detect-private-key
      - id: check-added-large-files
        args: ['--maxkb=500']

  # Quality checks - Run but don't block (Grace will report)
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.4.8
    hooks:
      - id: ruff
        args: ['--fix']
        # Don't exit non-zero, let Grace handle reporting
        always_run: false
        stages: [manual]

  - repo: https://github.com/pre-commit/mirrors-mypy
    rev: v1.10.0
    hooks:
      - id: mypy
        args: ['--config-file=mypy.ini', '--ignore-missing-imports']
        additional_dependencies: [
          'pydantic>=2.0',
          'types-PyYAML',
          'types-requests',
        ]
        exclude: '^(tests|tools|scripts|docs|main\.py|grace\.py)'
        # Don't block commits
        always_run: false
        stages: [manual]

  # Custom CIRIS checks - Informational only
  - repo: local
    hooks:
      # Dict[str, Any] audit - Informational
      - id: dict-any-audit
        name: Dict[str, Any] Audit (Info Only)
        entry: python tools/quality/audit_dict_any_usage.py
        language: python
        pass_filenames: false
        always_run: false
        stages: [manual]
        verbose: true

      # Version reminder - Gentle nudge
      - id: version-check
        name: Version Reminder
        entry: tools/dev/check_version_reminder.sh
        language: system
        pass_filenames: false
        always_run: false
        stages: [manual]

# Configuration
default_language_version:
  python: python3.12

# Files to exclude globally
exclude: |
  (?x)^(
    .*\.egg-info/.*|
    \.git/.*|
    \.mypy_cache/.*|
    \.pytest_cache/.*|
    __pycache__/.*|
    htmlcov/.*|
    build/.*|
    dist/.*|
    data/.*|
    logs/.*|
    .*\.db$
  )

# Stages configuration
default_stages: [pre-commit]
fail_fast: false  # Run all hooks even if one fails
