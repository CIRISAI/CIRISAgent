# Dockerfile for pytest CI emulation
# Closely matches GitHub Actions ubuntu-latest with Python 3.12
FROM python:3.12.11-slim

# Install system dependencies similar to ubuntu-latest environment
RUN apt-get update && apt-get install -y \
    curl \
    gcc \
    g++ \
    python3-dev \
    build-essential \
    git \
    && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Don't set CI=true so we can run tests that are skipped in CI
# ENV CI=true

# Upgrade pip to match CI behavior
RUN pip install --upgrade pip

# Install typing_extensions first (as done in CI)
RUN pip install typing_extensions>=4.0.0

# Copy requirements file and install dependencies
COPY requirements.txt .
RUN pip install --no-cache-dir --prefer-binary -r requirements.txt

# Install pytest and coverage tools
RUN pip install pytest pytest-cov

# Cache bust arg to force rebuild
ARG CACHEBUST=1

# Copy only source code and tests (not data files)
COPY ciris_engine/ ./ciris_engine/
COPY tests/ ./tests/
COPY pytest.ini ./
COPY mypy.ini ./
COPY README.md ./

# Ensure no database files exist
RUN find . -type f -name "*.db" -delete || true && \
    find . -type d -name __pycache__ -exec rm -rf {} + || true && \
    find . -type f -name "*.pyc" -delete || true && \
    find . -type f -name "*.pyo" -delete || true && \
    rm -rf .pytest_cache || true && \
    rm -rf .coverage* || true && \
    rm -rf htmlcov || true && \
    rm -rf data || true && \
    mkdir -p data

# Default command runs pytest with coverage (same as CI)
CMD ["pytest", "--cov=./", "--cov-report=xml:coverage.xml"]
